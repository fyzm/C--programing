
存储类型 类型说明符 声明符
static float x,y,*p;

1.类型限定符，2类型说明符 声明符
const char month[] = "January"

存储类型 类型限定符 类型说明符 
extern const unsigned long int a[10]

1.存储类型

1.1变量的性质
1.1.1 存储期限
1.1.2 作用域
1.1.3 链接

1.2 auto类型
//
1.3 static类型


static int i;//只在静态存储期限，文件内作用域

void f(void)
{
  static int j;//函数内部作用域有限
}

static int i;
void f1(void)
{
  /*has access to i*/
}
void f2(void)
{
  /*has access to i*/
}
char digit_to_hex_char(int digit)
{
  static const char hex_chars[16] = '01234567ABCDEF';
  return hex_chars[digit]
}

1.4 extern 存储类型
extern int i = 0;
int i = 0


extern int i;//静态存储期限,文件作用域
void f(void)
{
  extern int j;//静态存储期限,块作用域
}

1.5 register 存储类型/要求编译器把变量存储在寄存器中
//其变量不能取地址

//使用场景是频繁进行访问或者更新的变量
int sum_array(int a[],int n)
{
  register int i;
  int sum = 0;
  for(i = 0;i < n ;i++)
      sum +=a[i];
  return sum;
}

extern int f(int i);
//很少这么声明,害处大于好处

static int g(int i);
//一般都是这么声明
易容易维护,
减少了“名字空间的污染”,外部文件无法访问本地
int h(int i);




1.6 函数的存储类型
