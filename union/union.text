union {
  int i;
  double d;
} u;

struct {
  int i;
  double d;
} s;

struct catalog_item {
  int stock_number;
  double price;
  int item_type;
  union {
    struct {
      char title[]
      char author[]
      int num_pages;
    }book;
    struct {
      char design;
    }mug;
    struct {
      char design
      int colors;
      int sizes;
    }shirt;
  } item;

};


void print_number(Number n)
{
  if(n包含一个整数)
    printf()
  else
    printf()
}


struct  {
  double real,imaginary;
}c1,c2,c3;

struct {
  double real,imaginary;
}c1 = {0.0,1.0},c2 = {1.0,0.0},c3;


c1 = c2;
c3.real = c1.real + c2.real;

c3.imaginary = c3.imaginary + c3.imaginary;


struct complex {
  double real,imaginary;
}

struct complex c1,c2,c3;

make_complex(double mem1,double mem2)
{
  return (struct complex){mem1,mem2};
}

struct complex

add_complex(struct complex com1,struct complex com2)
{
  struct complex sum;
  sum.real = com1.real + com2.real;
  sum.imaginary = com1.imaginary + com2.imaginary;
  return sum;
}




typedef struct {
  double real,imaginary;  
}Complex;

Complex c1,c2,c3;


Complex
make_complex(double mem1,double mem2)
{
  return (Complex){mem1,mem2};
}

add_complex(Complex com1,Complex com2)
{
  Complex sum;
  sum.real = com1.real + com2.real;
  sum.imaginary = com1.imaginary + com2.imaginary;
  return sum;  
}

struct date{
  int month,day,year;
}

int day_of_year(struct date d)
{
  bool is_leap_year;
  int i,month_day[12] = {
    
  }
}
















